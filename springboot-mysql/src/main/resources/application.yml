server:
  port: 8002
  servlet:
    context-path: /mysql

spring:
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java
  # 数据库基本配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource # 连接池类型
    driver-class-name: com.mysql.cj.jdbc.Driver # 数据库驱动类型
    url: jdbc:mysql://localhost:3306/springboot_mysql?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC # 数据库地址
    username: root # 用户名
    password: 123456 # 数据库密码
    # 连接池配置信息
    ## 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    ## 配置获取连接等待超时的时间
    maxWait: 60000
    ## 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    ## 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    ## 测试连接
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
    testOnBorrow: false # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
    testOnReturn: false # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能

    poolPreparedStatements: true # 是否开启缓存PreparedStatement
    maxPoolPreparedStatementPerConnectionSize: 20 # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    useGlobalDataSourceStat: true # 合并多个DruidDataSource的监控数据
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500 # 通过connectProperties属性来打开mergeSql功能；慢SQL记录


